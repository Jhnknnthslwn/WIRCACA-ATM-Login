/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package monitoringsystem;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 *
 * @author mel
 */
public class Attempt extends javax.swing.JFrame implements Runnable{
    
    int hour,second,minute;
    int day,month,year;
    String timestr,datestr;
    
    int xMouse;
    int yMouse;
    
   MusicHelper mh = new MusicHelper();
    
   URL sounds, err, warnings, logouts,unsus, success, attemptload;

    /**
     * Creates new form Attempt
     */
    public Attempt() {
        
        Thread t = new Thread(this);
        t.start();
        
        initComponents();
        
        this.setIconImage(new ImageIcon(getClass().getResource("log.png")).getImage());
        alyson();
        
        sounds = getClass().getResource("1lofi.wav");
        unsus = getClass().getResource("unsuspicous.wav");

        
        
        
        
        Action playAction = new AbstractAction("play") {
            @Override
            public void actionPerformed(ActionEvent ae) {
                try {
                    mh.playbg1(sounds);
                } catch (UnsupportedAudioFileException | IOException | LineUnavailableException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
        String play = "play";
         en.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke( KeyEvent.VK_F11, 0), play);
         en.getActionMap().put(play, playAction); 
         
         Action pauseAction = new AbstractAction("pause") {
            @Override
            public void actionPerformed(ActionEvent ae) {
                try {
                    mh.bgStop();
                } catch (IOException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
        String pause = "pause";
         en.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke( KeyEvent.VK_F12, 0), pause);
         en.getActionMap().put(pause, pauseAction); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exit = new javax.swing.JLabel();
        mini = new javax.swing.JLabel();
        en = new javax.swing.JButton();
        timer = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        drag = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, 35, 25));

        mini.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miniMouseClicked(evt);
            }
        });
        getContentPane().add(mini, new org.netbeans.lib.awtextra.AbsoluteConstraints(605, 8, 35, 25));

        en.setBackground(new java.awt.Color(0, 51, 51));
        en.setFont(new java.awt.Font("Cambria", 0, 30)); // NOI18N
        en.setForeground(new java.awt.Color(255, 255, 255));
        en.setText("Try Again");
        en.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        en.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enActionPerformed(evt);
            }
        });
        getContentPane().add(en, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 445, 300, 43));

        timer.setFont(new java.awt.Font("Verdana", 1, 48)); // NOI18N
        timer.setForeground(new java.awt.Color(0, 255, 204));
        timer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(timer, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, 110, 50));

        date.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        date.setForeground(new java.awt.Color(0, 255, 204));
        getContentPane().add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 239, 110, 30));

        time.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        time.setForeground(new java.awt.Color(0, 255, 204));
        getContentPane().add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 239, 130, 30));

        drag.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                dragMouseDragged(evt);
            }
        });
        drag.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dragMousePressed(evt);
            }
        });
        getContentPane().add(drag, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 50));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monitoringsystem/icons/png/at.png"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:

        setState(Attempt.ICONIFIED);

    }//GEN-LAST:event_exitMouseClicked

    private void miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniMouseClicked
        // TODO add your handling code here:
        
        System.exit(0);
        
    }//GEN-LAST:event_miniMouseClicked

    private void dragMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dragMousePressed
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_dragMousePressed

    private void dragMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dragMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_dragMouseDragged

    private void enActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enActionPerformed
        // home
        Home h = new Home();
        h.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_enActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Attempt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Attempt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Attempt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Attempt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Attempt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JLabel date;
    private javax.swing.JLabel drag;
    private javax.swing.JButton en;
    private javax.swing.JLabel exit;
    private javax.swing.JLabel mini;
    private javax.swing.JLabel time;
    private javax.swing.JLabel timer;
    // End of variables declaration//GEN-END:variables
public void alyson(){
    new Thread(new Runnable() {
        @Override
        public void run() {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        try {
                for(int i=0;i<61; i++){
                    Thread.sleep(1000);
                    
                    timer.setText(i+"");
                    if(i==0){
                        mh.intruderBg(unsus);
                        
                        
                    }
                    if(i<=59){
                        
                        en.setEnabled(false);
                    }
                    if(i==60){
                        en.setEnabled(true);  
                        MusicHelper.popUpMusic();
                    }
                }
            } catch (Exception e) {
            }
        }
    }).start();
}

    @Override
    public void run() {
      while(true){
          
            try{
                Calendar c= Calendar.getInstance();
                hour=c.get(Calendar.HOUR_OF_DAY);
                if (hour >12)
                    hour=hour-12;
                minute=c.get(Calendar.MINUTE);
                second=c.get(Calendar.SECOND);
                year=c.get(Calendar.YEAR);
                month=c.get(Calendar.MONTH);
                day=c.get(Calendar.DAY_OF_MONTH);
                SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss a");
                SimpleDateFormat df = new SimpleDateFormat("MM:dd:yyyy");
                Date dat = c.getTime();
                timestr= sdf.format(dat);
                datestr = df.format(dat);
                time.setText(timestr);
                date.setText(datestr);
            
            }catch(Exception e){  
            } 
        }
    }
}
